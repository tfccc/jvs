package pac13_Lambda;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.DisplayName;
import utils.Formatter;
import utils.TravelArray;
import java.util.Comparator;
import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Supplier;

/**
 * @project: Java_Study
 * @author: Tang.F.C
 * @date: 2020-01-25 14:14
 * @desc: Lambda?????????
 *
 * ??????
 *   1.?????????е????????????,??????÷???????
 *   2.??????????
 *   3.????????????????е??????????????????????
 *
 * ?????????
 *   1.????::???????
 *   2.??::???????
 *   3.??::??????? (???????????"???????????",???????????"?????????")
 *                         (????: x.compareTo(y);  x.equals(y))
 *
 * ??????????????
 *   1.???
 *      ClassName::new
 *   2.???: ??????????????????
 *
 * ???????????
 *   1.???
 *      Type::new;
 *
 **/
public class T06_Reference {

    @Test
    @DisplayName("??1")
    public void test1() {
        //?????
        Consumer<Object> con1 = (x)-> System.out.println(x);
        //???÷???????
        Consumer<Object> con2 = System.out::println;
        con2.accept("??1");
    }

    @Test
    @DisplayName("??2")
    public void test2() {
        Comparator<Integer> comp = Integer::compare;
        System.out.println(comp.compare(1,5));
    }

    @Test
    @DisplayName("??3")
    public void test3() {
        Comparator<Integer> comp = Integer::compareTo;
        System.out.println(comp.compare(1,5));
    }

    @Test
    @DisplayName("??????????")
    public void test4() {
        //???
        System.out.println(Formatter.alignCenter("???",40));
        Supplier<Worker> sup1 = ()-> new Worker();
        Supplier<Worker> sup2 = Worker::new;
        System.out.println(sup1.get().toString());
        System.out.println(sup2.get().toString());
        System.out.println(Formatter.alignCenter("?в?"));
        //?в?
        Function<Integer, Worker> func1 = (age)-> new Worker(age);
        Function<Integer, Worker> func2 = Worker::new;
        System.out.println(func1.apply(20).toString());
        System.out.println(func2.apply(18).toString());
    }

    @Test
    @DisplayName("????????")
    public void test5() {
        Function<Integer, String[]> func1 = (x) -> new String[x];
        Function<Integer, String[]> func2 = String[]::new;
        String[] strs = func1.apply(10);
        TravelArray.travelWrapperType(strs, false);
        System.out.println(strs.length);
    }
}
