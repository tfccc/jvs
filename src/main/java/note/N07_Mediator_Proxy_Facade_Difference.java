package note;
/**
 * @author TFC
 * @date   2019年1月30日 下午12:40:31
 * @note   三个模式的区别
 *
 * 1.外观模式（Facade Pattern）
 * 定义一个外观类，外观类隐藏系统的复杂性，目的是为客户端提供简化的方法和对现有
 * 系统类方法的委托调用。
 *
 *
 * 2.代理模式（Proxy Pattern）
 * 用一个代理类代表另一个类的功能，不改变被代理类的功能。目的是控制对被代理类的
 * 访问。
 * 例如：一个经纪人，代理明星进行除演出之外的其它工作。
 *
 *
 * 3.中介者模式（Mediator Pattern）
 * 用中介对象来封装系统内，一系列的对象之间的交互。
 * 中介者使各对象不需要显式地相互引用，从而使其耦合松散，而且可以独立地改变它们
 * 之间的交互。将各对象之间的网状结构分离为星型结构。
 * 例如：MVC 框架，其中C（控制器）就是 M（模型）和 V（视图）的中介者。
 * 微信群是各群员之间的中介者。
 *
 */
class N07_Mediator_Proxy_Facade_Difference{

}